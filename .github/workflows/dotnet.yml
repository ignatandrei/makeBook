# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
    tags: ["v*"]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
        # cache: true
    - name: Restore dependencies
      run: |
        cd src
        cd apps
        cd MakeBookSolution
        dotnet restore 
    - name: Build
      run: |
        cd src
        cd apps
        cd MakeBookSolution
        dotnet tool restore
        dotnet r publishSingleFullWindows
    # - name: Test
    #  run: dotnet test --no-build --verbosity normal


    - name: 'Upload data'
      if: startsWith(github.ref, 'refs/tags/v') # This line ensures the step runs only if a tag version is present
      uses: actions/upload-artifact@v2
      with:
        name: data_${{github.run_number}}
        path: src/apps/MakeBookSolution/release
        retention-days: 1

    - uses: ncipollo/release-action@v1
      if: startsWith(github.ref, 'refs/tags/v') # This line ensures the step runs only if a tag version is present
      with:
        artifacts: "src/apps/MakeBookSolution/release/*.*"
        bodyFile: "README.md"
      
    # - uses: actions/github-script@v4
    #   if: startsWith(github.ref, 'refs/tags/v') # This line ensures the step runs only if a tag version is present
    #   with:
    #     github-token: ${{secrets.GITHUB_TOKEN}}
    #     script: |
    #       const { owner, repo } = context.repo
    #       const { data: { id } } = await github.repos.getLatestRelease({ owner, repo })
    #       await github.repos.deleteRelease({ owner, repo, release_id: id })
    # - uses: sgpublic/delete-release-action@v1.1
    #   if: startsWith(github.ref, 'refs/tags/v') # This line ensures the step runs only if a tag version is present
    #   with:
    #     # repo: '<owner>/<repoName>' # you can input a another repo here, defaults to current repo
    #     release-drop: true
    #     release-keep-count: 2
    #     release-drop-tag: true
    #     pre-release-drop: true
    #     pre-release-keep-count: -1
    #     pre-release-drop-tag: true
    #     draft-drop: true
    #     draft-drop-count: -1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.TOKEN }}